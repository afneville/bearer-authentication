#+TITLE: secure_json_api
#+AUTHOR: Alexander Neville

This is a secure api with protected routes. Using hashing and web tokens, incoming requests can be authenticated using the =authenticate= middleware, along with some other functions for handling tokens. The =config/keys.js= file holds the mongodb connection /URI/ and the secret salt for creating the web tokens. These should be updated to suit your requirements.

* Set-up

Find out how to set-up node and MongoDB here: https://github.com/alexander-neville/docs/blob/main/nodejs.org

* Endpoints

The available endpoints are:

1. post =api/user/register=
2. post =api/user/login=
3. get =api/user/dev-verify=
4. delete =api/user/delete=

* Requesting a Token

This application stores user data in a *monogdb* database. When a request to either *register* or *login* is made, a token is expected in return. A valid /JSON/ object is required to perform either one of these actions. Make sure the content type of your request is set to =application/json=.

** Creating an Account (register)

To register, a unique username, a password and a display name are needed. This is a sample request body posted to =/api/user/register=:

#+begin_src json
{
  "username": "alexn",
  "password": "1234",
  "name": "Alex Neville"
}
#+end_src

** Login

To login, only the username and password are needed. As before, make sure the content type is set correctly and this is also a posr request. Sample request:

#+begin_src json
{
  "username": "alexn",
  "password": "1234"
}
#+end_src

** Token

If a request to either of these routes is successfull, a token will be returned in the body of the response. Here is a sample response object:

#+begin_src json
{
  "token": "....."
}
#+end_src

* Using the Token

Once a token had been retrieved, a client may make requests to protected routes.

** Test Route

Get =/api/user/dev-verify= is included to test the API. No request body is required. To use the route set the /Authorization/ header to:

/'Bearer <your_token>/'

** Account Deletion

Delete =/api/user/delete= is included to remove a users account from the database. No request body is required. To use the route set the /Authorization/ header to:

/'Bearer <your_token>/'
